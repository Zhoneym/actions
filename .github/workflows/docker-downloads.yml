name: Build and Release Docker Image as TAR

on:
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Generate Tag Name (e.g. v20250730-001)
      id: tagger
      run: |
        TAG="v$(date +%Y%m%d)-001"
        echo "tag_name=$TAG" >> $GITHUB_OUTPUT

    - name: Create Git Tag via GitHub API
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const tag = "${{ steps.tagger.outputs.tag_name }}";
          const { repo, owner } = context.repo;
          const commit_sha = context.sha;

          await github.rest.git.createRef({
            owner,
            repo,
            ref: `refs/tags/${tag}`,
            sha: commit_sha,
          });

    - name: Create Dockerfile
      run: |
        cat <<EOF > Dockerfile
        FROM rockylinux:9

        ENV TZ=Asia/Shanghai

        RUN dnf -y update && \
            dnf -y install epel-release && \
            dnf -y install nginx nano vim && \
            dnf clean all

        EXPOSE 80
        CMD ["nginx", "-g", "daemon off;"]
        EOF

    - name: Build Docker image
      run: docker build -t nginx:rocky9 .

    - name: Save image to TAR
      run: docker save -o my-nginx-rocky9.tar nginx:rocky9

    - name: Create GitHub Release and upload TAR
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.tagger.outputs.tag_name }}
        files: my-nginx-rocky9.tar
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
